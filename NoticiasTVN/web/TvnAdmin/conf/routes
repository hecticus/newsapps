# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# Home page
GET     /                           controllers.Application.index()

# Map static resources from the /public folder to the /assets URL path
GET     /assets/*file               controllers.Assets.at(path="/public", file)

# Login page
GET     /login                      securesocial.controllers.LoginPage.login
GET     /logout                     securesocial.controllers.LoginPage.logout

# User Registration and password handling (only needed if you are using UsernamePasswordProvider)
GET     /signup                     securesocial.controllers.Registration.startSignUp
POST    /signup                     securesocial.controllers.Registration.handleStartSignUp
GET     /signup/:token              securesocial.controllers.Registration.signUp(token)
POST    /signup/:token              securesocial.controllers.Registration.handleSignUp(token)
GET     /reset                      securesocial.controllers.Registration.startResetPassword
POST    /reset                      securesocial.controllers.Registration.handleStartResetPassword
GET     /reset/:token               securesocial.controllers.Registration.resetPassword(token)
POST    /reset/:token               securesocial.controllers.Registration.handleResetPassword(token)
GET     /password                   securesocial.controllers.PasswordChange.page
POST    /password                   securesocial.controllers.PasswordChange.handlePasswordChange


# Providers entry points
GET     /authenticate/:provider     securesocial.controllers.ProviderController.authenticate(provider)
POST    /authenticate/:provider     securesocial.controllers.ProviderController.authenticateByPost(provider)
#GET     /not-authorized2           securesocial.controllers.ProviderController.notAuthorized
#GET	 /not-authorized			controllers.Application.notAuthorized()



#RUTAS PARA EL API

GET     /newsapi/categories/get      controllers.newsapi.CategoryController.get()
GET     /newsapi/news/get            controllers.newsapi.NewsController.get()




#<Tvn>

# Default path will just redirect to the category list
GET     /tvn					controllers.tvn.Application.index()
GET     /tvn/					controllers.tvn.Application.index()

# Categories list (look at the default values for pagination parameters)
GET     /tvn/list				controllers.tvn.Application.list(p:Int ?= 0, s ?= "sort", o ?= "asc", f ?= "")
GET     /tvn/lsort				controllers.tvn.Application.lsort()

# Add category
GET     /tvn/blank				controllers.tvn.Application.blank()
POST    /tvn					controllers.tvn.Application.submit()
					
# Edit existing category
GET     /tvn/:id				controllers.tvn.Application.edit(id:Long)
POST    /tvn/:id				controllers.tvn.Application.update(id:Long)
GET     /tvn/sort/:ids			controllers.tvn.Application.sort(ids:String)

# Delete a category
POST    /tvn/:id/delete			controllers.tvn.Application.delete(id:Long)

#</Tvn>


