# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# Home page
GET     /                          controllers.Application.index()
GET     /index                     controllers.Application.index()
GET     /index2                    controllers.Application.index2()
GET     /leaderboard               controllers.Application.leaderboard()
GET     /leaderboardfb             controllers.Application.leaderboardfb()
POST    /wsleaderboardfb           controllers.Application.wsleaderboardfb()

GET     /share/:id                 controllers.Application.share(id:String)
GET     /exit                      controllers.Application.exit()

GET     /check/*name                controllers.Application.checkFile(name: String)

#GET     /person       				controllers.Application.getAll()
#DELETE  /person/:id   				controllers.Application.delete(id: Long)
#POST    /person       				controllers.Application.create()


GET    /signin                  controllers.SignIn.blank()
POST   /signin                  controllers.SignIn.submit()


GET    /signup                  controllers.SignUp.blank()
POST   /signup                  controllers.SignUp.submit()
GET    /isEmailExist/:email         controllers.SignUp.isEmailExist(email: String)
GET    /reset                 	controllers.ResetPassword.blank()
POST   /reset                  	controllers.ResetPassword.submit()


# Map static resources from the /public folder to the /assets URL path

GET		/assets/js/routes           controllers.SignUp.jsRoutes()
GET     /assets/*file               controllers.Assets.at(path="/public", file)

#Teams
GET     /matchesapi/v1/team/test                   controllers.matchesapi.TeamController.test()
GET     /matchesapi/v1/team/search/:idTeam         controllers.matchesapi.TeamController.getById(idTeam:Integer, hecticResponse : Boolean = true)

#phases
GET     /matchesapi/v1/phase/get/allActive          controllers.matchesapi.PhaseController.getActivePhases()
GET     /matchesapi/v1/phase/get/currentActive      controllers.matchesapi.PhaseController.getCurrentPhase()
#GET     /matchesapi/v1/phase/get/matches/current    controllers.matchesapi.PhaseController.getCurrentPhaseMatches(clientScores:Object?=null)
GET     /matchesapi/v1/phase/get/matches/all        controllers.matchesapi.PhaseController.getAllPhasesMatches()

#client bet phases
POST    /matchesapi/v1/clientbet/get/current    controllers.matchesapi.ClientBetController.getClientBetForCurrentPhase()
POST    /matchesapi/v1/clientbet/save                      controllers.matchesapi.ClientBetController.storeClientBet()

#TEMPORAL TO FIX OLD
#POST    /matchesapi/v1/predictions/convert/one      controllers.matchesapi.PredictionController.convertOldDataToNewOne()
#GET    /matchesapi/v1/predictions/convert/all/:page/:size      controllers.matchesapi.PredictionController.convertOldDataToNewOne(page:Integer, size:Integer)

#predictions
POST    /matchesapi/v1/prediction/save              controllers.matchesapi.PredictionController.storeClientPrediction()
POST    /matchesapi/v1/prediction/get               controllers.matchesapi.PredictionController.getClientPrediction()


#bets
POST    /matchesapi/v1/bet/calculate                controllers.matchesapi.ClientBetController.calculateBets()
GET     /matchesapi/v1/bet/test                     controllers.matchesapi.ClientBetController.callTest()

#tvnfeeds
GET     /tvmaxfeeds/controversies/get               controllers.tvmaxfeeds.ControversyController.getControversies()
POST    /tvmaxfeeds/controversies/insert            controllers.tvmaxfeeds.ControversyController.insert()

GET     /tvmaxfeeds/predictions/get                 controllers.tvmaxfeeds.PredictionController.getPredictions()
POST    /tvmaxfeeds/predictions/insert              controllers.tvmaxfeeds.PredictionController.insert()

GET     /tvmaxfeeds/goals/get                       controllers.tvmaxfeeds.GoalController.getGoals()
POST    /tvmaxfeeds/goals/insert                    controllers.tvmaxfeeds.GoalController.insert()
GET     /tvmaxfeeds/goals/sorted/:field/:limit      controllers.tvmaxfeeds.GoalController.getGoalsSorted(field :String, limit : Integer)


GET     /tvmaxfeeds/calendar/get                    controllers.tvmaxfeeds.MatchController.getMatchs()
GET     /tvmaxfeeds/calendar/getAll                 controllers.tvmaxfeeds.MatchController.getAllMatchs()
POST    /tvmaxfeeds/calendar/insert                 controllers.tvmaxfeeds.MatchController.insert()
GET     /tvmaxfeeds/calendar/today                  controllers.tvmaxfeeds.MatchController.getToday()
GET     /tvmaxfeeds/calendar/today/active           controllers.tvmaxfeeds.MatchController.getActive()
GET     /tvmaxfeeds/calendar/today/results          controllers.tvmaxfeeds.MatchController.getResults()
GET     /tvmaxfeeds/calendar/getActive              controllers.tvmaxfeeds.MatchController.getActiveMatch()

GET     /tvmaxfeeds/news/get/:categoryName          controllers.tvmaxfeeds.NewsController.getNews(categoryName : String)
GET     /tvmaxfeeds/news/latest/                    controllers.tvmaxfeeds.NewsController.getLatest()
GET     /tvmaxfeeds/news/get/id/:id                 controllers.tvmaxfeeds.NewsController.getNewsById(id : String)
GET     /tvmaxfeeds/news/awesome/                   controllers.tvmaxfeeds.NewsController.getAwesome()
POST    /tvmaxfeeds/news/insert                     controllers.tvmaxfeeds.NewsController.insert()

#APP VERSION CONTROL
GET     /tvmax/appversion/check/:version/:os         controllers.AppVersionController.checkAppVersion(version:Integer, os:String)


POST    /push/client/insert                         controllers.pushevents.CategoriesWS.insertClient()
POST    /push/client/delete                         controllers.pushevents.CategoriesWS.deleteClient()
POST    /push/client/update                         controllers.pushevents.CategoriesWS.updateClient()
POST    /push/client/deleteFalse                    controllers.pushevents.CategoriesWS.deleteFalseClients()

POST    /push/client/insertActions                  controllers.pushevents.CategoriesWS.insertActions()
POST    /push/client/deleteActions                  controllers.pushevents.CategoriesWS.deleteActions()


POST    /push/client/getInfo                        controllers.pushevents.CategoriesWS.getClientInfo()

#simple news
GET     /tvmaxfeeds/simplenews/get/:categoryName          controllers.tvmaxfeeds.SimpleNewsController.getNews(categoryName : String)
GET     /tvmaxfeeds/simplenews/latest/                    controllers.tvmaxfeeds.SimpleNewsController.getLatest()
GET     /tvmaxfeeds/simplenews/get/id/:id                 controllers.tvmaxfeeds.SimpleNewsController.getNewsById(id : String)
POST    /tvmaxfeeds/simplenews/insert                     controllers.tvmaxfeeds.SimpleNewsController.insert()

GET     /tvmaxfeeds/newscategories/get/:version/:os          controllers.tvmaxfeeds.SimpleNewsController.getNewsCategories(version:Integer, os:String)
GET     /tvmaxfeeds/newscategories/getsimple          controllers.tvmaxfeeds.SimpleNewsController.getNewsCategories(version:Integer = 99999, os:String = "droid")
