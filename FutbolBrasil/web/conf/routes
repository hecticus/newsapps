# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~



OPTIONS        /*url                                                                      controllers.Application.options(url: String)

GET            /                                                                          controllers.Wap.index()
GET            /index                                                                     controllers.Wap.index()
GET            /news/:id                                                                  controllers.Wap.news(id:Integer)
GET            /matches                                                                   controllers.Wap.matches(id:Integer, page: Integer)
GET            /competitions                                                              controllers.Wap.competitions(route:String)
GET            /scorers                                                                   controllers.Wap.scorers(id:Integer)
GET            /mtm                                                                       controllers.Wap.mtm(id:Integer, match:Integer, event: Integer)
GET            /login                                                                     controllers.Wap.getLogin()
POST           /login/password                                                            controllers.Wap.getPassword()
POST           /login/create                                                              controllers.Wap.createClient()

GET            /check/*name                                                               controllers.Application.checkFile(name: String)
GET            /api/loading/:width/:height/:version/:so                                   controllers.Application.getAppSettings(width: Integer, height: Integer, version : String, so : String)

# Home page

#GET     /                      		                                                                     controllers.Application.index(p:Int ?= 0, s ?= "sort", o ?= "asc", f ?= "")
#GET     /index                                                                                              controllers.Application.index(p:Int ?= 0, s ?= "sort", o ?= "asc", f ?= "")
#GET     /news/list         			                                                                    controllers.news.NewsController.getNews()
#GET     /news/:id         			                                                                        controllers.Application.getNewsById(id:Long)

# Authenticate
GET            /restricted                                                                controllers.Application.restricted
GET            /assets/javascript/routes.js                                               controllers.Application.jsRoutes

GET            /profile                                                                   controllers.Application.profile

#GET     /login                                                                                              controllers.Application.login
#POST    /login                                                                                              controllers.Application.doLogin

GET            /logout                                                                    com.feth.play.module.pa.controllers.Authenticate.logout
GET            /authenticate/:provider                                                    com.feth.play.module.pa.controllers.Authenticate.authenticate(provider: String)

GET            /signup                                                                    controllers.Application.signup
POST           /signup                                                                    controllers.Application.doSignup

GET            /accounts/unverified                                                       controllers.Signup.unverified
GET            /authenticate/:provider/denied                                             controllers.Signup.oAuthDenied(provider: String)

GET            /accounts/verify/:token                                                    controllers.Signup.verify(token: String)
GET            /accounts/exists                                                           controllers.Signup.exists

GET            /accounts/password/reset/:token                                            controllers.Signup.resetPassword(token: String)
POST           /accounts/password/reset                                                   controllers.Signup.doResetPassword

GET            /accounts/password/change                                                  controllers.Account.changePassword
POST           /accounts/password/change                                                  controllers.Account.doChangePassword

GET            /accounts/verify                                                           controllers.Account.verifyEmail

GET            /accounts/add                                                              controllers.Account.link

GET            /accounts/link                                                             controllers.Account.askLink
POST           /accounts/link                                                             controllers.Account.doLink

GET            /accounts/merge                                                            controllers.Account.askMerge
POST           /accounts/merge                                                            controllers.Account.doMerge

GET            /login/password/forgot                                                     controllers.Signup.forgotPassword(email: String ?= "")
POST           /login/password/forgot                                                     controllers.Signup.doForgotPassword

# Map static resources from the /public folder to the /assets URL path
GET            /assets/*file                                                              controllers.Assets.at(path="/public", file)

#FOOTBALL NEWS

GET            /resource/list                                                             controllers.news.NewsController.getResource()
POST           /resource/update                                                           controllers.news.NewsController.upResource()

#Clients
POST           /futbolbrasil/v1/clients/create                                            controllers.client.FootballClients.create()
POST           /futbolbrasil/v1/clients/update/:id                                        controllers.client.FootballClients.update(id : Integer)
POST           /futbolbrasil/v1/clients/delete/:id                                        controllers.client.Clients.delete(id : Integer)
GET            /futbolbrasil/v1/clients/get/:id/:upstreamChannel                          controllers.client.FootballClients.get(id : Integer, upstreamChannel : String, pmc : Boolean?=false)
GET            /futbolbrasil/v1/clients/list                                              controllers.client.Clients.list(pageSize: Integer?=0, page: Integer?=0, pmc : Boolean?=false)
GET            /futbolbrasil/v1/clients/alerts/:id                                        controllers.client.FootballClients.getPushAlertsForClient(id : Integer)
GET            /futbolbrasil/v1/clients/bets/get/:id/:idCompetition                       controllers.client.FootballClients.getBetsForCompetition(id : Integer, idCompetition : Integer)
GET            /futbolbrasil/v1/clients/bets/get/date/:id/:date                           controllers.client.FootballClients.getBetsForDate(id : Integer, date : String)
GET            /futbolbrasil/v1/clients/bets/get/:id                                      controllers.client.FootballClients.getBets(id : Integer)
POST           /futbolbrasil/v1/clients/bets/create/:id                                   controllers.client.FootballClients.createBets(id : Integer)
GET            /futbolbrasil/v1/clients/dashboard/:id/:idLanguage                         controllers.client.FootballClients.dashboard(id : Integer, idLanguage : Integer)


GET            /futbolbrasil/v1/clients/leaderboard/get/:id/:idTournament/:idPhase        controllers.client.FootballClients.getLeaderboardForClient(id : Integer, idTournament : Integer, idPhase : Integer)
GET            /futbolbrasil/v1/clients/leaderboard/global/get/:id/:idTournament          controllers.client.FootballClients.getLeaderboardForClient(id : Integer, idTournament : Integer, idPhase : Integer?=0)
GET            /futbolbrasil/v1/clients/leaderboard/personal/tournament/:id               controllers.client.FootballClients.getPersonalLeaderboardForClient(id: Integer, idTournament: Integer?=0, idPhase: Integer?=0, global : Boolean?=true)
GET            /futbolbrasil/v1/clients/leaderboard/personal/phase/:id                    controllers.client.FootballClients.getPersonalLeaderboardForClient(id: Integer, idTournament: Integer?=0, idPhase: Integer?=0, global : Boolean?=false)
GET            /futbolbrasil/v1/clients/leaderboard/total/:id                             controllers.client.FootballClients.getLeaderboardTotalForClient(id: Integer)


GET            /futbolbrasil/v1/clients/scorers/:idClient                                 controllers.client.FootballManager.getScorers(idClient : Integer)


GET            /futbolbrasil/v1/languages                                                 controllers.client.Clients.getActiveLanguages()

#funciones para obtener imagenes locales
#GET     /futbolbrasil/v1/localimages/:file/:size                                                           controllers.ImageProcessing.getLocalResourceBySize(file : String, size : String)
#imagen width and height
GET            /futbolbrasil/v1/localimages/:file/:width                                  controllers.ImageProcessing.getLocalResourceByWidth(file : String, width : Integer)


#V2 RESTify routes

#Clients
POST           /futbolbrasil/v2/client                                                    controllers.client.FootballClients.create()
GET            /futbolbrasil/v2/client/:id                                                controllers.client.FootballClients.get(id : Integer, upstreamChannel : String ?= "Android", pmc : Boolean ?= false)
PUT            /futbolbrasil/v2/client/:id                                                controllers.client.FootballClients.update(id : Integer)
DELETE         /futbolbrasil/v2/client/:id                                                controllers.client.Clients.delete(id : Integer)
GET            /futbolbrasil/v2/client/:id/alerts                                         controllers.client.FootballClients.getPushAlertsForClient(id : Integer)
POST           /futbolbrasil/v2/client/:id/bet                                            controllers.client.FootballClients.createBet(id : Integer)
POST           /futbolbrasil/v2/client/:id/bets                                           controllers.client.FootballClients.createBets(id : Integer)
GET            /futbolbrasil/v2/client/:id/bets                                           controllers.client.FootballClients.getBets(id : Integer)
GET            /futbolbrasil/v2/client/:id/bets/:idCompetition                            controllers.client.FootballClients.getBetsForCompetition(id : Integer, idCompetition : Integer)
GET            /futbolbrasil/v2/client/:id/leaderboard/global/:idTournament               controllers.client.FootballClients.getLeaderboardForClient(id : Integer, idTournament : Integer, idPhase : Integer?=0)
GET            /futbolbrasil/v2/client/:id/leaderboard/personal/tournament                controllers.client.FootballClients.getPersonalLeaderboardForClient(id: Integer, idTournament: Integer?=0, idPhase: Integer?=0, global : Boolean?=true)
GET            /futbolbrasil/v2/client/:id/leaderboard/personal/phase                     controllers.client.FootballClients.getPersonalLeaderboardForClient(id: Integer, idTournament: Integer?=0, idPhase: Integer?=0, global : Boolean?=false)
POST           /futbolbrasil/v2/client/:id/upstream                                       controllers.Upstream.sendClientEvent(id : Integer)
GET            /futbolbrasil/v2/clients                                                   controllers.client.Clients.list(pageSize: Integer?=0, page: Integer?=0, pmc : Boolean?=false)

GET            /futbolbrasil/v2/locale.json                                               controllers.client.FootballClients.getLocale(lang : String)
POST           /futbolbrasil/v2/locale.json                                               controllers.client.FootballClients.setLocale(lang : String)




->              /jobcore                                                                   JobCore.Routes
->              /upstream                                                                  UpstreamAPIConnector.Routes